// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ItemCardViewer renders information tab 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ItemCardViewer
    item={
      Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "claim_1234",
          "claimLabel": "claim_math",
          "grade": 1,
          "gradeLabel": "1",
          "interactionTypeCode": "type01",
          "interactionTypeLabel": "type01label",
          "isPerformanceItem": false,
          "itemKey": 123,
          "subjectCode": "Math",
          "subjectLabel": "MTH",
          "targetHash": 323,
          "targetShortName": "something",
          "title": "test_title",
        },
        "rubrics": Array [],
        "targetDescription": "targetDescription",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ItemTabs
          changedTab={[Function]}
          selectedTab="information"
        />,
        <div>
           
          <div
            className="item-content"
          >
            <div>
              <AboutThisItemDetail
                commonCoreStandardsDescription="commonCoreStandardsDescription"
                depthOfKnowledge="depthOfKnowledge"
                educationalDifficulty="educationalDifficulty"
                evidenceStatement="evidenceStatement"
                itemCardViewModel={
                  Object {
                    "bankKey": 1,
                    "claimCode": "claim_1234",
                    "claimLabel": "claim_math",
                    "grade": 1,
                    "gradeLabel": "1",
                    "interactionTypeCode": "type01",
                    "interactionTypeLabel": "type01label",
                    "isPerformanceItem": false,
                    "itemKey": 123,
                    "subjectCode": "Math",
                    "subjectLabel": "MTH",
                    "targetHash": 323,
                    "targetShortName": "something",
                    "title": "test_title",
                  }
                }
                rubrics={Array []}
                targetDescription="targetDescription"
              />
            </div>
          </div>
        </div>,
      ],
      "className": "item-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changedTab": [Function],
          "selectedTab": "information",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            " ",
            <div
              className="item-content"
            >
              <div>
                <AboutThisItemDetail
                  commonCoreStandardsDescription="commonCoreStandardsDescription"
                  depthOfKnowledge="depthOfKnowledge"
                  educationalDifficulty="educationalDifficulty"
                  evidenceStatement="evidenceStatement"
                  itemCardViewModel={
                    Object {
                      "bankKey": 1,
                      "claimCode": "claim_1234",
                      "claimLabel": "claim_math",
                      "grade": 1,
                      "gradeLabel": "1",
                      "interactionTypeCode": "type01",
                      "interactionTypeLabel": "type01label",
                      "isPerformanceItem": false,
                      "itemKey": 123,
                      "subjectCode": "Math",
                      "subjectLabel": "MTH",
                      "targetHash": 323,
                      "targetShortName": "something",
                      "title": "test_title",
                    }
                  }
                  rubrics={Array []}
                  targetDescription="targetDescription"
                />
              </div>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div>
                <AboutThisItemDetail
                  commonCoreStandardsDescription="commonCoreStandardsDescription"
                  depthOfKnowledge="depthOfKnowledge"
                  educationalDifficulty="educationalDifficulty"
                  evidenceStatement="evidenceStatement"
                  itemCardViewModel={
                    Object {
                      "bankKey": 1,
                      "claimCode": "claim_1234",
                      "claimLabel": "claim_math",
                      "grade": 1,
                      "gradeLabel": "1",
                      "interactionTypeCode": "type01",
                      "interactionTypeLabel": "type01label",
                      "isPerformanceItem": false,
                      "itemKey": 123,
                      "subjectCode": "Math",
                      "subjectLabel": "MTH",
                      "targetHash": 323,
                      "targetShortName": "something",
                      "title": "test_title",
                    }
                  }
                  rubrics={Array []}
                  targetDescription="targetDescription"
                />
              </div>,
              "className": "item-content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <AboutThisItemDetail
                  commonCoreStandardsDescription="commonCoreStandardsDescription"
                  depthOfKnowledge="depthOfKnowledge"
                  educationalDifficulty="educationalDifficulty"
                  evidenceStatement="evidenceStatement"
                  itemCardViewModel={
                    Object {
                      "bankKey": 1,
                      "claimCode": "claim_1234",
                      "claimLabel": "claim_math",
                      "grade": 1,
                      "gradeLabel": "1",
                      "interactionTypeCode": "type01",
                      "interactionTypeLabel": "type01label",
                      "isPerformanceItem": false,
                      "itemKey": 123,
                      "subjectCode": "Math",
                      "subjectLabel": "MTH",
                      "targetHash": 323,
                      "targetShortName": "something",
                      "title": "test_title",
                    }
                  }
                  rubrics={Array []}
                  targetDescription="targetDescription"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "commonCoreStandardsDescription": "commonCoreStandardsDescription",
                  "depthOfKnowledge": "depthOfKnowledge",
                  "educationalDifficulty": "educationalDifficulty",
                  "evidenceStatement": "evidenceStatement",
                  "itemCardViewModel": Object {
                    "bankKey": 1,
                    "claimCode": "claim_1234",
                    "claimLabel": "claim_math",
                    "grade": 1,
                    "gradeLabel": "1",
                    "interactionTypeCode": "type01",
                    "interactionTypeLabel": "type01label",
                    "isPerformanceItem": false,
                    "itemKey": 123,
                    "subjectCode": "Math",
                    "subjectLabel": "MTH",
                    "targetHash": 323,
                    "targetShortName": "something",
                    "title": "test_title",
                  },
                  "rubrics": Array [],
                  "targetDescription": "targetDescription",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ItemTabs
            changedTab={[Function]}
            selectedTab="information"
          />,
          <div>
             
            <div
              className="item-content"
            >
              <div>
                <AboutThisItemDetail
                  commonCoreStandardsDescription="commonCoreStandardsDescription"
                  depthOfKnowledge="depthOfKnowledge"
                  educationalDifficulty="educationalDifficulty"
                  evidenceStatement="evidenceStatement"
                  itemCardViewModel={
                    Object {
                      "bankKey": 1,
                      "claimCode": "claim_1234",
                      "claimLabel": "claim_math",
                      "grade": 1,
                      "gradeLabel": "1",
                      "interactionTypeCode": "type01",
                      "interactionTypeLabel": "type01label",
                      "isPerformanceItem": false,
                      "itemKey": 123,
                      "subjectCode": "Math",
                      "subjectLabel": "MTH",
                      "targetHash": 323,
                      "targetShortName": "something",
                      "title": "test_title",
                    }
                  }
                  rubrics={Array []}
                  targetDescription="targetDescription"
                />
              </div>
            </div>
          </div>,
        ],
        "className": "item-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changedTab": [Function],
            "selectedTab": "information",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " ",
              <div
                className="item-content"
              >
                <div>
                  <AboutThisItemDetail
                    commonCoreStandardsDescription="commonCoreStandardsDescription"
                    depthOfKnowledge="depthOfKnowledge"
                    educationalDifficulty="educationalDifficulty"
                    evidenceStatement="evidenceStatement"
                    itemCardViewModel={
                      Object {
                        "bankKey": 1,
                        "claimCode": "claim_1234",
                        "claimLabel": "claim_math",
                        "grade": 1,
                        "gradeLabel": "1",
                        "interactionTypeCode": "type01",
                        "interactionTypeLabel": "type01label",
                        "isPerformanceItem": false,
                        "itemKey": 123,
                        "subjectCode": "Math",
                        "subjectLabel": "MTH",
                        "targetHash": 323,
                        "targetShortName": "something",
                        "title": "test_title",
                      }
                    }
                    rubrics={Array []}
                    targetDescription="targetDescription"
                  />
                </div>
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div>
                  <AboutThisItemDetail
                    commonCoreStandardsDescription="commonCoreStandardsDescription"
                    depthOfKnowledge="depthOfKnowledge"
                    educationalDifficulty="educationalDifficulty"
                    evidenceStatement="evidenceStatement"
                    itemCardViewModel={
                      Object {
                        "bankKey": 1,
                        "claimCode": "claim_1234",
                        "claimLabel": "claim_math",
                        "grade": 1,
                        "gradeLabel": "1",
                        "interactionTypeCode": "type01",
                        "interactionTypeLabel": "type01label",
                        "isPerformanceItem": false,
                        "itemKey": 123,
                        "subjectCode": "Math",
                        "subjectLabel": "MTH",
                        "targetHash": 323,
                        "targetShortName": "something",
                        "title": "test_title",
                      }
                    }
                    rubrics={Array []}
                    targetDescription="targetDescription"
                  />
                </div>,
                "className": "item-content",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <AboutThisItemDetail
                    commonCoreStandardsDescription="commonCoreStandardsDescription"
                    depthOfKnowledge="depthOfKnowledge"
                    educationalDifficulty="educationalDifficulty"
                    evidenceStatement="evidenceStatement"
                    itemCardViewModel={
                      Object {
                        "bankKey": 1,
                        "claimCode": "claim_1234",
                        "claimLabel": "claim_math",
                        "grade": 1,
                        "gradeLabel": "1",
                        "interactionTypeCode": "type01",
                        "interactionTypeLabel": "type01label",
                        "isPerformanceItem": false,
                        "itemKey": 123,
                        "subjectCode": "Math",
                        "subjectLabel": "MTH",
                        "targetHash": 323,
                        "targetShortName": "something",
                        "title": "test_title",
                      }
                    }
                    rubrics={Array []}
                    targetDescription="targetDescription"
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "commonCoreStandardsDescription": "commonCoreStandardsDescription",
                    "depthOfKnowledge": "depthOfKnowledge",
                    "educationalDifficulty": "educationalDifficulty",
                    "evidenceStatement": "evidenceStatement",
                    "itemCardViewModel": Object {
                      "bankKey": 1,
                      "claimCode": "claim_1234",
                      "claimLabel": "claim_math",
                      "grade": 1,
                      "gradeLabel": "1",
                      "interactionTypeCode": "type01",
                      "interactionTypeLabel": "type01label",
                      "isPerformanceItem": false,
                      "itemKey": 123,
                      "subjectCode": "Math",
                      "subjectLabel": "MTH",
                      "targetHash": 323,
                      "targetShortName": "something",
                      "title": "test_title",
                    },
                    "rubrics": Array [],
                    "targetDescription": "targetDescription",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": "div",
              },
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ItemCardViewer renders rubric tab 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ItemCardViewer
    item={
      Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "claim_1234",
          "claimLabel": "claim_math",
          "grade": 1,
          "gradeLabel": "1",
          "interactionTypeCode": "type01",
          "interactionTypeLabel": "type01label",
          "isPerformanceItem": false,
          "itemKey": 123,
          "subjectCode": "Math",
          "subjectLabel": "MTH",
          "targetHash": 323,
          "targetShortName": "something",
          "title": "test_title",
        },
        "rubrics": Array [],
        "targetDescription": "targetDescription",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ItemTabs
          changedTab={[Function]}
          selectedTab="rubric"
        />,
        <div>
           
          <div
            className="item-content"
          />
           
        </div>,
      ],
      "className": "item-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changedTab": [Function],
          "selectedTab": "rubric",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            " ",
            <div
              className="item-content"
            />,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "item-content",
            },
            "ref": null,
            "rendered": Array [],
            "type": "div",
          },
          " ",
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ItemTabs
            changedTab={[Function]}
            selectedTab="rubric"
          />,
          <div>
             
            <div
              className="item-content"
            />
             
          </div>,
        ],
        "className": "item-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changedTab": [Function],
            "selectedTab": "rubric",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " ",
              <div
                className="item-content"
              />,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "className": "item-content",
              },
              "ref": null,
              "rendered": Array [],
              "type": "div",
            },
            " ",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`ItemCardViewer renders viewer tab 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ItemCardViewer
    item={
      Object {
        "commonCoreStandardsDescription": "commonCoreStandardsDescription",
        "depthOfKnowledge": "depthOfKnowledge",
        "educationalDifficulty": "educationalDifficulty",
        "evidenceStatement": "evidenceStatement",
        "itemCardViewModel": Object {
          "bankKey": 1,
          "claimCode": "claim_1234",
          "claimLabel": "claim_math",
          "grade": 1,
          "gradeLabel": "1",
          "interactionTypeCode": "type01",
          "interactionTypeLabel": "type01label",
          "isPerformanceItem": false,
          "itemKey": 123,
          "subjectCode": "Math",
          "subjectLabel": "MTH",
          "targetHash": 323,
          "targetShortName": "something",
          "title": "test_title",
        },
        "rubrics": Array [],
        "targetDescription": "targetDescription",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <ItemTabs
          changedTab={[Function]}
          selectedTab="viewer"
        />,
        <div>
           
          <div
            className="item-content"
          >
            <ItemFrame
              url="http://ivs.smarterbalanced.org/items?ids=1-123"
            />
          </div>
           
        </div>,
      ],
      "className": "item-card",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "changedTab": [Function],
          "selectedTab": "viewer",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            " ",
            <div
              className="item-content"
            >
              <ItemFrame
                url="http://ivs.smarterbalanced.org/items?ids=1-123"
              />
            </div>,
            " ",
          ],
        },
        "ref": null,
        "rendered": Array [
          " ",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ItemFrame
                url="http://ivs.smarterbalanced.org/items?ids=1-123"
              />,
              "className": "item-content",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "url": "http://ivs.smarterbalanced.org/items?ids=1-123",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          " ",
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <ItemTabs
            changedTab={[Function]}
            selectedTab="viewer"
          />,
          <div>
             
            <div
              className="item-content"
            >
              <ItemFrame
                url="http://ivs.smarterbalanced.org/items?ids=1-123"
              />
            </div>
             
          </div>,
        ],
        "className": "item-card",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "changedTab": [Function],
            "selectedTab": "viewer",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              " ",
              <div
                className="item-content"
              >
                <ItemFrame
                  url="http://ivs.smarterbalanced.org/items?ids=1-123"
                />
              </div>,
              " ",
            ],
          },
          "ref": null,
          "rendered": Array [
            " ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <ItemFrame
                  url="http://ivs.smarterbalanced.org/items?ids=1-123"
                />,
                "className": "item-content",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "url": "http://ivs.smarterbalanced.org/items?ids=1-123",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            " ",
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
